Day 10:
    Loop, so replace S with right pipe
    Start from the right and go until you find the first pipe.
    Keep your "hand" on the inside wall.
    Mark any open space on the other side of the inside wall as inside.
    Flood fill inside if necessary.

Day 12:
    Convert do DP
    Use three dimensional array dp[grid index][run lengths index][starting/finishing]

Day 17:
    Is it possible to add a filtering function around neighbors for the ulimate
    crucible instead of making an entirely differnt function?  This would
    help with the "hacky" addition of if statement to prevent stopping on the
    last block.

    Model the neighbors as turn or go forward min steps to max steps instead
    of just a single step forward counting consecutive blocks

Day 18:
    Try to use a quadtree to do the floodfill

    Understand shoelace + pick's theorem better

    Try modified flood fill like https://www.reddit.com/r/adventofcode/comments/18lmzo4/2023_day_18_part_2_modified_flood_fill/


Day 25:
    Explore minimum cut algorithm, maybe just using networkx

    Explore using Edmonds-Karp and the max-flow/min-cut theorem